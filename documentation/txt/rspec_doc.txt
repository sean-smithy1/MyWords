
List
  should respond to [:listname, :listtype, :words]
  when list is not present
    should not be valid
  when listname is too long
    should not be valid

Creating or Associating Words
  should create words not in the DB
  should not allow duplicate words (PENDING: Not yet implemented)
  #<RSpec::Core::Example:0x000000042a8768> (PENDING: No reason given)
  should associate words that exist in the DB

User
  should respond to #name
  should respond to #email
  should respond to #password_digest
  should respond to #password
  should respond to #password_confirmation
  should respond to #admin
  should respond to #authenticate
  should respond to #password_confirmation
  should respond to #remember_token
  should respond to #authenticate
  should be valid
  should not be admin
  when name is not present
    should not be valid
  when name is too long
    should not be valid
  when email is not present
    should not be valid
  when email format is invalid
    should be invalid
  when email format is valid
    should be valid
  when email address is already taken
    should not be valid
  when password is not present
    should not be valid
  when password doesn't match confirmation
    should not be valid
  when password confirmation is nil
    should not be valid
  return value of authenticate method
    with valid password
      should == #<User id: 144, name: "Example User", email: "user@example.com", created_at: "2013-11-24 21:46:47", updated_at: "2013-11-24 21:46:47", admin: false, password_digest: "$2a$04$g.txM4y4cP6vdJYI4EJRsew6eR4hEzyszdK0NfIWCdq2...", remember_token: "w4Vch7FmlXVVllV3lyJ9Zw">
    with invalid password
      should not == false
      should be false
  with a password that's too short
    should be invalid
  email address with mixed case
    should be saved as all lower-case
  remember token
    remember_token
      should not be blank
  with admin attribute set to 'true'
    should be admin

Word
  add some examples to (or delete) /home/seans/rails_projects/MyWords/spec/models/words_spec.rb (PENDING: No reason given)

AuthenticationPages
  signin page
    should has css "h1" with text "Sign in"
    should has css "title" with text "Sign in"
  signin
    with invalid information
      should has css "title" with text "Sign in"
      should has css "div.alert.alert-error" with text "Invalid"
      after visiting another page
        should not has css "div.alert.alert-error"
    with valid information
      should has css "title" with text "Person 1" (FAILED - 1)
      should has link "Users" (FAILED - 2)
      should has link "Profile"
      should has link "Settings"
      should has link "Sign out"
      should not has link "Sign in"
  Authorisation
    as non-admin users
      submitting a DELETE request to the Users#destroy action
        should redirect to "/"
    in the Users controller
      visiting the edit page
        should has css "title" with text "Sign in"
      visiting the user index
        should has css "title" with text "Sign in"
      submitting to the update action
        should redirect to "/signin"
      when attempting to visit a protected page
        after signing in
          should render the desired protected page

List pages
  profile page
    example at ./spec/requests/list_pages_spec.rb:12 (FAILED - 3)
    example at ./spec/requests/list_pages_spec.rb:13 (FAILED - 4)

Static Pages
  should have the right links on the layout
  Home page
    should not has css "title" with text "| Home"
    it should behave like all static pages
      should has css "h1" with text "MyWords"
      should has css "title" with text "MyWords"
  Help page
    it should behave like all static pages
      should has css "h1" with text "Help"
      should has css "title" with text "MyWords | Help"
  About page
    it should behave like all static pages
      should has css "h1" with text "About"
      should has css "title" with text "MyWords | About"
  Contacts page
    it should behave like all static pages
      should has css "h1" with text "Contacts"
      should has css "title" with text "MyWords | Contacts"

User pages
  profile page
    should has css "h1" with text "Person 12"
    should has css "title" with text "Person 13"
  index
    should has css "title" with text "All users"
    should list each user
    pagination
      should has css "div.pagination"
      should list each user
    delete links
      should not has link "delete"
      as an admin user
        should has link "delete"
        should be able to delete another user (FAILED - 5)
        should not has link "delete"
  signup page
    should has css "h1" with text "Sign up"
    should has css "title" with text "MyWords | Sign up"
  signup
    with invalid information
      should not create a user
    with valid information
      should create a user
  edit
    page
      should has css "h1" with text "Update your profile"
      should has css "title" with text "Edit user"
      should has link "change"
    with invalid information
      should has content "error"
    with valid information
      should has css "title" with text "New Name"
      should has css "div.alert.alert-success"
      should has link "Sign out"
      should == "New Name"
      should == "new@example.com"

Pending:
  Creating or Associating Words should not allow duplicate words
    # Not yet implemented
    # ./spec/models/lists_spec.rb:30
  Creating or Associating Words #<RSpec::Core::Example:0x000000042a8768>
    # No reason given
    # ./spec/models/lists_spec.rb:30
  Word add some examples to (or delete) /home/seans/rails_projects/MyWords/spec/models/words_spec.rb
    # No reason given
    # ./spec/models/words_spec.rb:4

Failures:

  1) AuthenticationPages signin with valid information should has css "title" with text "Person 1"
     Failure/Error: it { should have_selector('title', text: user.name) }
       expected css "title" with text "Person 1" to return something
     # ./spec/requests/authentication_pages_spec.rb:36:in `block (4 levels) in <top (required)>'

  2) AuthenticationPages signin with valid information should has link "Users"
     Failure/Error: it { should have_link('Users',    href: users_path) }
       expected link "Users" to return something
     # ./spec/requests/authentication_pages_spec.rb:37:in `block (4 levels) in <top (required)>'

  3) List pages profile page 
     Failure/Error: before { visit user_path(list) }
     NameError:
       undefined local variable or method `list' for #<RSpec::Core::ExampleGroup::Nested_6::Nested_1:0x007f6fb4d9c0a8>
     # ./spec/requests/list_pages_spec.rb:10:in `block (3 levels) in <top (required)>'

  4) List pages profile page 
     Failure/Error: before { visit user_path(list) }
     NameError:
       undefined local variable or method `list' for #<RSpec::Core::ExampleGroup::Nested_6::Nested_1:0x007f6fb4d04be0>
     # ./spec/requests/list_pages_spec.rb:10:in `block (3 levels) in <top (required)>'

  5) User pages index delete links as an admin user should be able to delete another user
     Failure/Error: expect { click_link('delete') }.to change(User, :count).by(-1)
     ActionController::ParameterMissing:
       param not found: user
     # ./app/controllers/users_controller.rb:68:in `user_params'
     # ./app/controllers/users_controller.rb:41:in `destroy'
     # (eval):2:in `click_link'
     # ./spec/requests/user_pages_spec.rb:55:in `block (6 levels) in <top (required)>'
     # ./spec/requests/user_pages_spec.rb:55:in `block (5 levels) in <top (required)>'

Finished in 6.62 seconds
87 examples, 5 failures, 3 pending

Failed examples:

rspec ./spec/requests/authentication_pages_spec.rb:36 # AuthenticationPages signin with valid information should has css "title" with text "Person 1"
rspec ./spec/requests/authentication_pages_spec.rb:37 # AuthenticationPages signin with valid information should has link "Users"
rspec ./spec/requests/list_pages_spec.rb:12 # List pages profile page 
rspec ./spec/requests/list_pages_spec.rb:13 # List pages profile page 
rspec ./spec/requests/user_pages_spec.rb:54 # User pages index delete links as an admin user should be able to delete another user
